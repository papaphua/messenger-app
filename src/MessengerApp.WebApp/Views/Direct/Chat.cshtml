@using MessengerApp.WebApp.Helpers
@using MessengerApp.Domain.Enumerations
@model MessengerApp.Application.Dtos.Direct.DirectDto

@inject IViewLocalizer ViewLocalizer

<script type="module" src="~/js/directHub.js"></script>

<div id="userData" data-username="@ViewBag.Username" data-profilepicture="@ViewBag.ProfilePictureBytes" data-directId="@Model.Id"></div>

<div class="container mt-4">
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col">
                    <h5 class="card-title">@ViewLocalizer["Profile"]</h5>
                    <p class="card-text">
                        <strong>@ViewLocalizer["Username"]:</strong> @Model.ProfileInfoDto.UserName
                    </p>
                    <p class="card-text">
                        <strong>@ViewLocalizer["FName"]:</strong> @Model.ProfileInfoDto.FirstName
                    </p>
                    <p class="card-text">
                        <strong>@ViewLocalizer["LName"]:</strong> @Model.ProfileInfoDto.LastName
                    </p>
                    <p class="card-text">
                        <strong>@ViewLocalizer["Bio"]:</strong> @Model.ProfileInfoDto.Biography
                    </p>
                </div>
                <div class="col">
                    @if (Model.ProfilePictureBytes != null && Model.ProfilePictureBytes.Length != 0)
                    {
                        <img class="profile-picture" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.ProfilePictureBytes)" alt="Profile Picture"/>
                    }
                    else
                    {
                        <div class="empty-circle"></div>
                    }
                </div>
            </div>
        </div>
    </div>

    <form enctype="multipart/form-data" id="messageForm" method="post" asp-controller="Direct" asp-action="CreateDirectMessage">
        <div class="form-group">
            <input type="hidden" name="directId" value="@Model.Id">
            <label for="content">@ViewLocalizer["Message"]:</label>
            <textarea class="form-control" id="content" name="CreateMessageDto.Content" rows="3"></textarea>
        </div>
        <div class="form-group">
            <label for="attachmentInput"></label>
            <input id="attachmentInput" class="form-control" multiple="multiple" type="file" name="file"/>
        </div>
        <button id="sendMessageButton" type="submit" class="btn btn-primary">@ViewLocalizer["Send"]</button>
    </form>

    <h2>@ViewLocalizer["Messages"]</h2>
    <div id="messagesContainer">
        @foreach (var message in Model.Messages)
        {
            <div class="card mt-3">
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <h5 class="card-title">@ViewLocalizer["Message"]</h5>
                            <p class="card-text">
                                <strong>@ViewLocalizer["Sender"]:</strong> @message.Sender.UserName
                            </p>
                            <p class="card-text">
                                <strong>@ViewLocalizer["Content"]:</strong> @message.Content
                            </p>
                            <div class="card-text">
                                @if (message.Attachments != null && message.Attachments.Any())
                                {
                                    <strong>@ViewLocalizer["Attachments"]:</strong>
                                    <div class="attachments">
                                        @foreach (var attachment in message.Attachments)
                                        {
                                            <img class="attachment" src="data:image/jpeg;base64,@Convert.ToBase64String(attachment.ContentBytes)" alt="Attachment"/>
                                        }
                                    </div>
                                }
                            </div>
                            <p class="card-text">
                                <strong>@ViewLocalizer["Timestamp"]:</strong> @message.Timestamp
                            </p>
                        </div>
                        <div class="col">
                            @if (message.Sender.ProfilePictureBytes != null && message.Sender.ProfilePictureBytes.Length != 0)
                            {
                                <img class="profile-picture" src="data:image/jpeg;base64,@Convert.ToBase64String(message.Sender.ProfilePictureBytes)" alt="Profile Picture"/>
                            }
                            else
                            {
                                <div class="empty-circle"></div>
                            }
                        </div>
                    </div>
                </div>
                <div class="card-footer d-flex">
                    @foreach (var reaction in Reactions.Dictionary)
                    {
                        var isReacted = message.Reactions!
                            .Any(r => r.ReactionNum == reaction.Key &&
                                      r.User.Id == Parser.ParseUserId(Context));

                        var count = message.Reactions!
                            .Count(r => r.ReactionNum == reaction.Key);

                        <form method="post" asp-action="AddReaction">
                            <div class="form-group">
                                <input type="hidden" name="messageId" value="@message.Id">
                                <input type="hidden" name="reaction" value="@((Reaction)reaction.Key)">
                                <button class="btn  @(isReacted ? "btn-primary" : "btn-secondary")" type="submit">@reaction.Value @count</button>
                            </div>
                        </form>
                    }
                </div>
            </div>
        }
    </div>
</div>